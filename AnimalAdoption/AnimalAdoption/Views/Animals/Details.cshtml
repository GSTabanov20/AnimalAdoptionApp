@model AnimalAdoption.Models.Animal
@using AnimalAdoption.Controllers
@using Microsoft.AspNetCore.Identity
@inject UserManager<User> UserManager

@{
    var user = UserManager.GetUserAsync(User).Result;
    var isAdmin = user?.IsAdmin ?? false;
}

<div class="container mt-5">
    <div class="row">
        <div class="col-md-4">
            <img src="~/images/animals/@Model.Image" alt="image of @Model.Name" class="img-fluid rounded mb-3">
        </div>
        <div class="col-md-8">
            <h1 class="display-4">@Html.DisplayFor(model => model.Name)</h1>
            <ul class="list-group list-group-flush">
                <li class="list-group-item">
                    <strong>Age: </strong>@AnimalsController.CalculateAge(Model.DateOfBirth)
                </li>

                <li class="list-group-item">
                    <strong>Gender: </strong>@Html.DisplayFor(model => model.Gender)
                </li>
                <li class="list-group-item">
                    <strong>Description: </strong>@Html.DisplayFor(model => model.Description)
                </li>
                <li class="list-group-item">
                    <strong>Is Adopted: </strong>@Html.DisplayFor(model => model.IsAdopted)
                </li>
            </ul>
            <div class="mt-3">
                @if (isAdmin)
                {
                    <a class="btn btn-primary" asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
                }
                else if (user != null)
                {
                    <a class="btn btn-danger" asp-action="AdoptForm" asp-route-id="@Model.Id">Adopt</a>
                }
                <a class="btn btn-secondary" asp-action="Index">Back to List</a>
            </div>
        </div>
    </div>
</div>
